{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Holodex/HoloAPI V2",
    "description": "Holodex Public API. Successor to the HoloAPI v1",
    "contact": {}
  },
  "host": "holodex.net",
  "basePath": "/api/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/live": {
      "get": {
        "description": "This is somewhat similar to calling `/videos`. \n\nHowever, this endpoint imposes these default values on the query parameters: You can choose to override them by providing your own values.\n  \n    status: [STATUSES.LIVE, STATUSES.UPCOMING].join(','),\n    type: 'stream',\n    sort: 'available_at',\n    order: 'asc',\n    max_upcoming_hours: 48,\n    limit: 9999,\n    include: live_info + query's include\n  ",
        "summary": "Query Live and Upcoming Videos",
        "operationId": "QueryLiveandUpcomingVideos",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by video uploader channel id"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "new",
              "upcoming",
              "live",
              "past",
              "missing"
            ],
            "type": "string",
            "description": "Filter by video status"
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "default": "all",
            "type": "string",
            "description": "A comma separated list of language codes to filter channels/clips, official streams do not follow this parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "stream",
              "clip"
            ],
            "type": "string",
            "description": "Filter by type of video"
          },
          {
            "name": "topic",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by video topic id"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "clips",
                "refers",
                "sources",
                "simulcasts",
                "mentions",
                "description",
                "live_info",
                "channel_stats",
                "songs"
              ]
            },
            "description": "Comma separated list of extra info for video"
          },
          {
            "name": "org",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by clips that feature the org's talent or videos posted by the org's talent"
          },
          {
            "name": "mentioned_channel_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by mentioned channel id, excludes itself. Generally used to find collabs/clips that include the requested channel"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "available_at",
            "type": "string",
            "description": "Sort by any returned video field"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "type": "string",
            "description": "Order by ascending or descending"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 50.0,
            "exclusiveMaximum": false,
            "description": "Results limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset results"
          },
          {
            "name": "paginated",
            "in": "query",
            "required": false,
            "default": "<empty>",
            "type": "string",
            "description": "If paginated is set to any non-empty value, return an object with total, otherwise returns an array."
          },
          {
            "name": "max_upcoming_hours",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "Number of maximum hours upcoming to get upcoming videos by (for rejecting waiting rooms that are two years out)"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A single Youtube Video ID. If Specified, only this video can be returned (may be filtered out by other conditions though)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": "[{\"available_at\":\"2021-05-13T19:59:59.000Z\",\"channel\":{\"english_name\":\"Ninomae Ina‚Äônis\",\"id\":\"UCMwGHR0BTZuLsmjY_NT5Pwg\",\"name\":\"Ninomae Ina'nis Ch. hololive-EN\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwng37V0l-NwF3bu7QA4XmOP5EZFwk5zJE-78OHP9=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"89rZZO10m0k\",\"live_viewers\":12685,\"published_at\":\"2021-05-13T13:47:09.000Z\",\"start_actual\":\"2021-05-13T19:59:59.000Z\",\"start_scheduled\":\"2021-05-13T20:00:00.000Z\",\"status\":\"live\",\"title\":\"„ÄêMinecraft„Äë waHHHH\",\"topic_id\":\"minecraft\",\"type\":\"stream\"},{\"available_at\":\"2021-05-13T23:00:00.000Z\",\"channel\":{\"english_name\":\"Kishido Temma\",\"id\":\"UCGNI4MENvnsymYjKiZwv9eg\",\"name\":\"Temma Ch. Â≤∏Â†ÇÂ§©Áúü\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwnjek7CeN83n90k6OaFaezz0vdgXe5RYaxl_nPaX=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"CPD_nW0rcnk\",\"published_at\":\"2021-05-13T16:48:21.000Z\",\"start_scheduled\":\"2021-05-13T23:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„ÄêSTUDY„ÄëNew Studying EN Application!!Êñ∞„Åó„ÅÑËã±Ë™ûÂãâÂº∑„ÇΩ„Éï„Éà„ÇÑ„Å£„Å¶„Åø„Çã„ÄêÂ≤∏Â†ÇÂ§©Áúü/„Éõ„É≠„Çπ„Çø„Éº„Ç∫„Äë\",\"topic_id\":\"english_only\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T03:00:00.000Z\",\"channel\":{\"english_name\":\"Shirogane Noel\",\"id\":\"UCdyqAaZDKHXg4Ahi7VENThQ\",\"name\":\"Noel Ch. ÁôΩÈäÄ„Éé„Ç®„É´\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwnijLF2X1YBVQo3rClt7ub29cYM7OzpmRmliaGbw=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"uAGM8d4-X2U\",\"published_at\":\"2021-05-13T17:17:06.000Z\",\"start_scheduled\":\"2021-05-14T03:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"Let‚Äôs study English togetherüìùË∂ÖÁµ∂‰πÖ„ÄÖ„ÅÆDuolingoÔºÅ„ÄêÁôΩÈäÄ„Éé„Ç®„É´/„Éõ„É≠„É©„Ç§„Éñ„Äë\",\"topic_id\":\"english_only\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T10:00:00.000Z\",\"channel\":{\"english_name\":\"Kanade Izuru\",\"id\":\"UCZgOv3YDEs-ZnZWDYVwJdmA\",\"name\":\"Izuru Ch. Â•èÊâã„Ç§„ÉÖ„É´\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwnhNA5NPSYpFiMba_lmeNqYZJ4bVtZKf-5g5YlxGcA=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":197,\"id\":\"d0NXC7POoUs\",\"published_at\":\"2021-05-12T03:04:58.000Z\",\"start_scheduled\":\"2021-05-14T10:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„ÄêÊ≠å„Å£„Å¶„Åø„Åü„Äë„Ç∏„É£„Ç¨„Éº„Éé„Éº„Éà„ÄêÂ•èÊâã„Ç§„ÉÖ„É´/„Ç¢„Çπ„ÉÜ„É´„Éª„É¨„ÉÄ„Äë\",\"topic_id\":\"singing\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T10:00:00.000Z\",\"channel\":{\"english_name\":\"Sakura Miko\",\"id\":\"UC-hM6YJuNYVAmUWxeIr9FeA\",\"name\":\"Miko Ch. „Åï„Åè„Çâ„Åø„Åì\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwniR0ijvAPNICEVzF8Pz0kSkuhBLKXd31oc5yO-0AQ=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"BLDvnztpcXM\",\"published_at\":\"2021-05-13T18:04:52.000Z\",\"start_scheduled\":\"2021-05-14T10:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„Äê  „Äë„Çà„Å¶„ÅÑ„Å°ÔºÅ„Äê„Éõ„É≠„É©„Ç§„Éñ/„Åï„Åè„Çâ„Åø„Åì„Äë\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T11:00:00.000Z\",\"channel\":{\"english_name\":\"Oozora Subaru\",\"id\":\"UCvzGlP9oQwU--Y0r9id_jnA\",\"name\":\"Subaru Ch. Â§ßÁ©∫„Çπ„Éê„É´\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwniCgko15I_x5bYWm0G2vnf5hZqD5hLOtLEDw0Na=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"pGdQB7nPOi8\",\"published_at\":\"2021-05-13T10:00:39.000Z\",\"start_scheduled\":\"2021-05-14T11:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„Äê„ÄëÂçòÁô∫„ÇØ„Ç§„Ç∫„Ç≤„Éº„Äê„Äë\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T12:00:00.000Z\",\"channel\":{\"english_name\":\"Natsuiro Matsuri\",\"id\":\"UCQ0UDLQCjY0rmuxCDE38FGg\",\"name\":\"Matsuri Channel Â§èËâ≤„Åæ„Å§„Çä\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwni8cjtyc08E7rocvO9_gR1b5BhO1O6O1VreDxMW=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"tpVtbVVBnSs\",\"published_at\":\"2021-05-13T20:01:50.000Z\",\"start_scheduled\":\"2021-05-14T12:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„ÄêAPEX„Äë„ÅÜ„Çã„ÅãÂπºÁ®öÂúí„Åæ„ÇÜ„ÅíÁµÑ/CR„Ç´„Çπ„Çø„É†#6„Äê„Éõ„É≠„É©„Ç§„Éñ/Â§èËâ≤„Åæ„Å§„Çä„Äë\",\"topic_id\":\"apex\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T12:00:00.000Z\",\"channel\":{\"english_name\":\"Arurandeisu\",\"id\":\"UCKeAhJvy8zgXWbh9duVjIaQ\",\"name\":\"Aruran Ch. „Ç¢„É´„É©„É≥„Éá„Ç£„Çπ\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwnjIqTphTjcWJLTftb3ppGk71CVwCYaH2M5KkmZOAQ=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"wyJTO7CXOHc\",\"published_at\":\"2021-05-13T12:10:17.000Z\",\"start_scheduled\":\"2021-05-14T12:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„ÄêÔºÉ„Ç¢„É©„Éú „Äë„Åù„ÅÆÁ≠ã„Éà„É¨ÁõÆÁöÑ„Å´Âêà„Çè„Åõ„Å¶ËÄÉ„Åà„Å¶„Åæ„Åô„Åã!? -ARN's Lab-„Äê„Ç¢„É´„É©„É≥„Éá„Ç£„Çπ/„Éõ„É≠„Çπ„Çø„Éº„Ç∫„Äë\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T12:00:00.000Z\",\"channel\":{\"english_name\":\"Shishiro Botan\",\"id\":\"UCUKD-uaobj9jiqB-VXt71mA\",\"name\":\"Botan Ch.ÁçÖÁôΩ„Åº„Åü„Çì\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwngRC-JqguPnj9ljVH3UulyfdlyQzLYzLeSrhvD6=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"X1xXG2qIJWg\",\"published_at\":\"2021-05-13T19:21:29.000Z\",\"start_scheduled\":\"2021-05-14T12:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„Äê„Éê„Ç§„Ç™„Éè„Ç∂„Éº„Éâ„É¥„Ç£„É¨„ÉÉ„Ç∏„Äë„Ç§„Éº„Çµ„É≥„Å®Ê¨°„ÅÆ„Çπ„ÉÜ„Éº„Ç∏„Å∏‚ÄïResident Evil Village„ÄêÁçÖÁôΩ„Åº„Åü„Çì/„Éõ„É≠„É©„Ç§„Éñ„Äë\",\"topic_id\":\"residentevil\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T13:00:00.000Z\",\"channel\":{\"english_name\":\"Mori Calliope\",\"id\":\"UCL_qhgtOy0dy1Agp8vkySQg\",\"name\":\"Mori Calliope Ch. hololive-EN\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwniY6zzRc3nUO1zLCBlmaAxeLNDoVWjw0hKGztvJ=s800-c-k-c0x00ffffff-no-rj-mo\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"_F2ITnPX7lg\",\"published_at\":\"2021-05-13T14:01:53.000Z\",\"start_scheduled\":\"2021-05-14T13:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„ÄêMINECRAFT„Äë Cabin Barbecue Vibes, Dead Beats! #hololiveEnglish #holoMyth\",\"topic_id\":\"minecraft\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T13:00:00.000Z\",\"channel\":{\"english_name\":\"Sakura Miko\",\"id\":\"UC-hM6YJuNYVAmUWxeIr9FeA\",\"name\":\"Miko Ch. „Åï„Åè„Çâ„Åø„Åì\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwniR0ijvAPNICEVzF8Pz0kSkuhBLKXd31oc5yO-0AQ=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"j-Y0xgqNXWc\",\"published_at\":\"2021-05-13T18:10:37.000Z\",\"start_scheduled\":\"2021-05-14T13:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„Äê „Ç¶„ÉûÂ®ò„Éó„É™„ÉÜ„Ç£„Éº„ÉÄ„Éº„Éì„Éº „Äë„Äê„Éõ„É≠„É©„Ç§„Éñ/„Åï„Åè„Çâ„Åø„Åì„Äë\",\"topic_id\":\"umamusume\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T13:00:00.000Z\",\"channel\":{\"english_name\":\"Rikkaroid\",\"id\":\"UC9mf_ZVpouoILRY9NUIaK-w\",\"name\":\"Rikka ch.ÂæãÂèØ\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwnghUH22DLP22EHC3PZP7xXzJFd7qS_scK95WhaQ=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"q2s5d8A_pm0\",\"published_at\":\"2021-05-12T10:47:10.000Z\",\"start_scheduled\":\"2021-05-14T13:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"#16„ÄêRiTunes Labo„ÄëÁîü„Çª„ÉÉ„Ç∑„Éß„É≥Ê≠åÊû†Ôºö„Ç≤„Çπ„Éà„Äémiro„Äè„ÄêÂæãÂèØ/„Éõ„É≠„Çπ„Çø„Éº„Ç∫ „Äë#„Çä„Å°„ÇÖ„Çâ„Åº\",\"topic_id\":\"singing\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T14:00:00.000Z\",\"channel\":{\"english_name\":\"Shiranui Flare\",\"id\":\"UCvInZx9h3jC2JzsIzoOebWg\",\"name\":\"Flare Ch. ‰∏çÁü•ÁÅ´„Éï„É¨„Ç¢\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwngtkUgGkgWTz57Er3GSzuMUR07HISM_yDhKQFnR_A=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"q-pIKINMwig\",\"published_at\":\"2021-05-13T21:58:01.000Z\",\"start_scheduled\":\"2021-05-14T14:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„ÄêGTAV„ÄëÊÑüÂãï„ÅÆ„Éï„Ç£„Éä„Éº„É¨„Éª„Éª„ÉªÔºüThe emotional finale...?„Äê„Éõ„É≠„É©„Ç§„Éñ/‰∏çÁü•ÁÅ´„Éï„É¨„Ç¢„Äë\",\"topic_id\":\"gta5\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T14:30:00.000Z\",\"channel\":{\"english_name\":\"Tokino Sora\",\"id\":\"UCp6993wxpyDPHUpavwDFqgg\",\"name\":\"SoraCh. „Å®„Åç„ÅÆ„Åù„Çâ„ÉÅ„É£„É≥„Éç„É´\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwngZmr_qbKhGIvHaHwLRmKhKxdeFfM7ZbK316vFNSw=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"T4FmAguGOI0\",\"published_at\":\"2021-05-13T15:18:16.000Z\",\"start_scheduled\":\"2021-05-14T14:30:00.000Z\",\"status\":\"upcoming\",\"title\":\"„ÄêË™ïÁîüÊó•„Äë„Ç´„Ç¶„É≥„Éà„ÉÄ„Ç¶„É≥„Åô„Çã„Çà„Å¨„Çì„Å¨„ÇìÔºÅÔºÅ„ÄêÔºÉ„Å®„Åç„ÅÆ„Åù„ÇâË™ïÁîüÊó•2021„Äë\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T15:00:00.000Z\",\"channel\":{\"english_name\":\"Himemori Luna\",\"id\":\"UCa9Y57gfeY0Zro_noHRVrnw\",\"name\":\"Luna Ch. Âß´Ê£Æ„É´„Éº„Éä\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwngV89Ez1--ZzNX3jCA082Mt-JGRZEXZ1lmW876a-w=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"IYhUfwJuGEo\",\"published_at\":\"2021-05-13T17:26:21.000Z\",\"start_scheduled\":\"2021-05-14T15:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„Äê ÈÖí„Å®ËÇ¥ „ÄëÈ´òÁ¥ö„ÇØ„É©„Éñ„É´„Éº„Éäüç∏„Ç™„Éº„Éó„É≥„Åô„Çã„ÅÆ„Çâ„Å£ÔºÅ‚ú®(„Éªo„Éªüç¨)„ÄêÂß´Ê£Æ„É´„Éº„Éä/„Éõ„É≠„É©„Ç§„Éñ„Äë\",\"type\":\"stream\"},{\"available_at\":\"2021-05-14T17:00:00.000Z\",\"channel\":{\"english_name\":\"Natsuiro Matsuri\",\"id\":\"UCQ0UDLQCjY0rmuxCDE38FGg\",\"name\":\"Matsuri Channel Â§èËâ≤„Åæ„Å§„Çä\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwni8cjtyc08E7rocvO9_gR1b5BhO1O6O1VreDxMW=s800-c-k-c0x00ffffff-no-rj\",\"type\":\"vtuber\"},\"duration\":0,\"id\":\"jDANZuw6IDM\",\"published_at\":\"2021-05-12T23:53:59.000Z\",\"start_scheduled\":\"2021-05-14T17:00:00.000Z\",\"status\":\"upcoming\",\"title\":\"„ÄêMinecraft„ÄëÁù°Áú†Â∞éÂÖ• / „É†„Éº„É≥„Éè„Ç¶„Çπ‰ΩúÊàêÔºÅ„Äê„Éõ„É≠„É©„Ç§„Éñ/Â§èËâ≤„Åæ„Å§„Çä„Äë\",\"topic_id\":\"minecraft\",\"type\":\"stream\"}]"
            },
            "headers": {}
          }
        }
      }
    },
    "/videos": {
      "get": {
        "description": "Pretty much everything you need. This is the most 'vanilla' variant with almost no preset values, and `/channels/{channelId}/{type}` and `/live` endpoints both use the same query structure but provision default values differently for some of the query params.\n\nNot as powerful at searching arbitrary text as the Search API (currently not documented/available). ",
        "summary": "Query Videos",
        "operationId": "QueryVideos",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by video uploader channel id"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "new",
              "upcoming",
              "live",
              "past",
              "missing"
            ],
            "type": "string",
            "description": "Filter by video status"
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "default": "all",
            "type": "string",
            "description": "A comma separated list of language codes to filter channels/clips, official streams do not follow this parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "stream",
              "clip"
            ],
            "type": "string",
            "description": "Filter by type of video"
          },
          {
            "name": "topic",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by video topic id"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "clips",
                "refers",
                "sources",
                "simulcasts",
                "mentions",
                "description",
                "live_info",
                "channel_stats",
                "songs"
              ]
            },
            "description": "Comma separated list of extra info for video"
          },
          {
            "name": "org",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by clips that feature the org's talent or videos posted by the org's talent"
          },
          {
            "name": "mentioned_channel_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by mentioned channel id, excludes itself. Generally used to find collabs/clips that include the requested channel"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "available_at",
            "type": "string",
            "description": "Sort by any returned video field"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "type": "string",
            "description": "Order by ascending or descending"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 50.0,
            "exclusiveMaximum": false,
            "description": "Results limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset results"
          },
          {
            "name": "paginated",
            "in": "query",
            "required": false,
            "default": "<empty>",
            "type": "string",
            "description": "If paginated is set to any non-empty value, return an object with total, otherwise returns an array."
          },
          {
            "name": "max_upcoming_hours",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "Number of maximum hours upcoming to get upcoming videos by (for rejecting waiting rooms that are two years out)"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A single Youtube Video ID. If Specified, only this video can be returned (may be filtered out by other conditions though)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VideoFull"
            },
            "headers": {}
          }
        }
      }
    },
    "/channels/{channelId}": {
      "get": {
        "description": "Get Channel Information",
        "summary": "get-v2-channels-channelId",
        "operationId": "get-v2-channels-channelId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the Youtube Channel that is being queried"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Channel"
            },
            "examples": {
              "application/json": {
                "banner": "https://yt3.ggpht.com/U2KIthUFXtUHa0j5kosrZ1IHTr2sSRZ0nC7wh3_HrLF4a35Zp4-2TzqRqO8HJE04w5-BwW73fg",
                "clip_count": null,
                "comments_crawled_at": null,
                "crawled_at": "2021-05-13T20:44:14.001Z",
                "created_at": "2021-04-23T07:21:00.045Z",
                "description": "I make translated clips from Hololive and Vtubers.\n",
                "english_name": null,
                "id": "UC4Fh9OcvIEWK405Cvg25jDw",
                "inactive": false,
                "lang": "en",
                "name": "Sushi [Hololive and Vtubers]",
                "org": null,
                "photo": "https://yt3.ggpht.com/ytc/AAUvwnjZ3i5csnFMZqorfAHE7JUuD8VdWJDcJbwt2YiK=s800-c-k-c0x00ffffff-no-rj",
                "published_at": "2020-05-26T06:35:52.412Z",
                "suborg": null,
                "subscriber_count": "163000",
                "thumbnail": "https://yt3.ggpht.com/ytc/AAUvwnjZ3i5csnFMZqorfAHE7JUuD8VdWJDcJbwt2YiK=s88-c-k-c0x00ffffff-no-rj",
                "twitter": null,
                "type": "subber",
                "updated_at": "2021-05-13T15:00:05.766Z",
                "video_count": "1586",
                "view_count": "135584366",
                "yt_uploads_id": "UU4Fh9OcvIEWK405Cvg25jDw"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/channels/{channelId}/{type}": {
      "get": {
        "description": "A simplified endpoint for access channel specific data. If you want more customization, the same result can be obtained by calling the `/videos` endpoint.",
        "summary": "get-v2-channels-channelId-clips",
        "operationId": "get-v2-channels-channelId-clips",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the Youtube Channel that is being queried"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "enum": [
              "clips",
              "videos",
              "collabs"
            ],
            "type": "string",
            "description": "The type of video resource to fetch. Clips finds clip videos of a `vtuber` channel, Video finds the `channelId` channel's uploads, and collabs finds videos uploaded by other channels that mention this `channelId`"
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "default": "all",
            "type": "string",
            "description": "A comma separated list of language codes to filter channels/clips, official streams do not follow this parameter"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "clips",
                "refers",
                "sources",
                "simulcasts",
                "mentions",
                "description",
                "live_info",
                "channel_stats",
                "songs"
              ]
            },
            "description": "Comma separated list of extra info for video"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 50.0,
            "exclusiveMaximum": false,
            "description": "Results limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset results"
          },
          {
            "name": "paginated",
            "in": "query",
            "required": false,
            "default": "<empty>",
            "type": "string",
            "description": "If paginated is set to any non-empty value, return an object with total, otherwise returns an array."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "default": ""
            },
            "headers": {}
          }
        }
      }
    },
    "/users/live": {
      "get": {
        "description": "This endpoint is similar to the /live endpoint and usually replies much faster. It is more friendly in general. The cost to execute a lookup is significantly cheaper. It's unfortunately less customizable as a result.\n\nWe recommends using this if you have a fixed set of channel IDs to look up status for.",
        "summary": "get-cached-live",
        "operationId": "get-cached-live",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channels",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "comma separated Youtube Channel IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "default": "",
              "items": {
                "$ref": "#/definitions/Video"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/videos/{videoId}": {
      "get": {
        "description": "Retrieves a video object.\n\nAlso retrieves Comments if query parameter `c` is set.\n\nAlso retrieves Recommendations if query parameter `lang` is set",
        "summary": "get-videos-videoId",
        "operationId": "get-videos-videoId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "videoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of a Youtube Video"
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "default": "all",
            "type": "string",
            "description": "A comma separated list of language codes to filter channels/clips, official streams do not follow this parameter"
          },
          {
            "name": "c",
            "in": "query",
            "required": false,
            "enum": [
              "1",
              "0"
            ],
            "type": "string",
            "description": "if `1` then will reply with timestamp comments for this video"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VideosResponse"
            },
            "headers": {}
          }
        }
      }
    },
    "/channels": {
      "get": {
        "description": "List Channels",
        "summary": "get-channels",
        "operationId": "get-channels",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "vtuber",
              "subber"
            ],
            "type": "string",
            "description": "Type of Channel, whether it's a vtuber or a subber. Leave unset to query all."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset results"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 50.0,
            "exclusiveMaximum": false,
            "description": "Results limit"
          },
          {
            "name": "org",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "If set, filter for Vtuber belonging to a specific org"
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Comma separated list of languages. Language is a property of Channel, so only Channels satisfying the language will be returned. Leave empty to search for Vtubers and/or all clippers."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Column to sort on, leave default to use 'org' as sort. Any first level property of channel should work here."
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "ASC or DESC order, default asc."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "default": "",
              "items": {
                "$ref": "#/definitions/Channel"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/search/videoSearch": {
      "post": {
        "description": "Flexible endpoint to search for videos fufilling multiple conditions. Descriptions with \"any\" implies an OR condition, and \"all\" implies a AND condition.\n\nSearching for topics and clips is not supported, because clips do not contain topic_ids ",
        "summary": "post-search-videoSearch",
        "operationId": "post-search-videoSearch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchVideoSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "default": ""
            },
            "headers": {}
          }
        }
      }
    },
    "/search/commentSearch": {
      "post": {
        "description": "Flexible endpoint to search for comments in videos fufilling multiple conditions. Descriptions with \"any\" implies an OR condition, and \"all\" implies a AND condition.",
        "summary": "post-search-commentSearch",
        "operationId": "post-search-commentSearch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchCommentSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": "{\"total\":11,\"items\":[{\"id\":\"3xns3zxYBkY\",\"title\":\"„Äê#„Åä„Åã„Åì„Çç„Äë„Çè„Çì„Å´„ÇÉ„ÇìÊ∑±Â§ú„É©„Ç§„Éñ„Äê„Ç™„Éï„Ç≥„É©„Éú„Äë\",\"type\":\"stream\",\"published_at\":\"2020-10-19T06:02:44.000Z\",\"available_at\":\"2020-10-19T07:01:32.135Z\",\"duration\":4036,\"status\":\"past\",\"songcount\":3,\"channel\":{\"id\":\"UChAnqc_AY5_I3Px5dig3X1Q\",\"name\":\"Korone Ch. ÊàåÁ•û„Åì„Çç„Å≠\",\"type\":\"vtuber\",\"photo\":\"https://yt3.ggpht.com/ytc/AAUvwnj7QwmJ9YhyKY-9SkOKhKIzTKDMJp0HX2vAdQUVdw=s800-c-k-c0x00ffffff-no-rj\",\"english_name\":\"Inugami Korone\"},\"comments\":[{\"comment_key\":\"UgzdW0dndnSxBe71_Zp4AaABAg\",\"message\":\"Okayu's solo at 9:05 of Lemon was soooo good that even Korone was taking it all in. This has been a great day to start the week. From Coco & Haachama returning, Sui-chan's magnificent FREE FREE concert, to everyone showing their idol prowess with so many singing streams. This is what Hololive is all about & I'm so proud to be apart of all this right here & now.\"},{\"comment_key\":\"UgwCZ5ywJxmuc1TlniV4AaABAg\",\"message\":\"0:46 KORONE NOISES\\r\\n1:04 1. TOUCH / „Çø„ÉÉ„ÉÅ\\r\\n4:31 [MC1]\\r\\n6:19 2. Lemon\\r\\n10:36 [MC2]\\r\\n15:54 3. Racing into the Night (YORU NI KAKERU) / Â§ú„Å´ÈßÜ„Åë„Çã\\r\\n20:21 [MC3]\\r\\n23:37 4. SHIN TAKARAJIMA / Êñ∞ÂÆùÂ≥∂\\r\\n28:38 [MC4]\\r\\n33:10 5. ROKI / „É≠„Ç≠\\r\\n37:21 [MC5] & Hakujitsu / ÁôΩÊó•\\r\\n43:50 6. Genesis of Aquarion / ÂâµËÅñ„ÅÆ„Ç¢„ÇØ„Ç®„É™„Ç™„É≥\\r\\n48:32 [MC6]\\r\\n49:40 7. LION / „É©„Ç§„Ç™„É≥\\r\\n54:40 [MC7] & Curry-Meshi in Miracle / „Ç´„É¨„Éº„É°„Ç∑„Éª„Ç§„É≥„Éª„Éü„É©„ÇØ„É´\\r\\n57:10 8. if... OKAYU SINGING & KORONE RAP\\r\\n1:01:00 9. if... KORONE SINGING & OKAYU RAP\\r\\n1:04:39 10. if... OKAYU SINGING & KORONE RAP\"},{\"comment_key\":\"Ugz0aAkvJ23V2e9AO9h4AaABAg\",\"message\":\"..6:19 lemon\\n39:48 „Åì„Çç„Éû„Éû„Åå„Åä„Åã„ÇÜÂ§ßÂ•Ω„Åç„Å™Ë©±\\n42:40 ÁôΩÊó•\\n57:11 if..„Åä„Åã„ÇÜ:Ê≠å „Åì„Çç„Å≠:„É©„ÉÉ„Éó\"},{\"comment_key\":\"UgzONJ8Et-Br1-MXv-Z4AaABAg\",\"message\":\"9:05 best okayu vocal..  this is third time she stream lemon..  she become more more better.. \"},{\"comment_key\":\"UgwLuffiGjkAqMdAd8F4AaABAg\",\"message\":\"„Åä„Åã„Åì„Çç„É©„Ç§„ÉñÊú¨ÂΩì„Å´Ê•Ω„Åó„Åè„Å¶ÊúÄÈ´ò„Åô„Åé„Åü...„ÅÇ„Çä„Åå„Å®„ÅÜ....!!\\n\\nmy memo &set list\\n00:47 ÈñãÂßã\\r\\n01:05 üé∂„Çø„ÉÉ„ÉÅ / Touch / Â≤©Â¥éËâØÁæé\\r\\n06:19 üé∂„É¨„É¢„É≥ / Lemon / Á±≥Ê¥•ÁéÑÂ∏´\\r\\n12:33 Ê≠å„Éó„É™„ÅÆË©±\\r\\n13:32 „É©„Éñ„É©„Ç§„Éñ„ÅÆË©±\\r\\n15:38 Âñâ„ÅÆË™øÁØÄ\\r\\n15:52 üé∂Â§ú„Å´ÈßÜ„Åë„Çã / Racing into the Night  / YOASOBI\\r\\n20:45 „Çª„Éà„É™‰Ωú„Çä\\r\\n22:56 Ê≠åË©û„ÇíÂàÜ„Åë„Å¶„Åä„ÅÑ„Å¶„Åè„Çå„Åü„Åì„Çç„Åï„Çì\\r\\n23:38 üé∂Êñ∞ÂÆùÂ≥∂ / Shin Takarajima / „Çµ„Ç´„Éä„ÇØ„Ç∑„Éß„É≥\\r\\n - 26:01 ÈñìÂ•è„Åã„Çè„ÅÑ„ÅÑ\\r\\n30:41 „Åù„Çå„ÅØÊú¨ÂΩì„Å´„Åä„Åã„ÇÜ„Å™„ÅÆ„Åã„Å™?\\r\\n33:10 üé∂„É≠„Ç≠ / Roki / „Åø„Åç„Å®P\\r\\n - 35:28 „Åç„ÇÖ„Éº„Çì\\r\\n39:53 „Åä„Åã„ÇÜ„ÅåÂ•Ω„Åç„Å™„Åì„Çç„Å≠„Åæ„Åæ\\n42:40 üéµÁôΩÊó• / Hakujitsu / King Gnu(„Å°„Çá„Å£„Å®„Å†„Åë)\\r\\n43:50 üé∂ÂâµËÅñ„ÅÆ„Ç¢„ÇØ„Ç®„É™„Ç™„É≥ / Genesis of Apuarion / AKINO\\r\\n49:36 üé∂„É©„Ç§„Ç™„É≥ / Lion / May'n „Éª ‰∏≠Â≥∂ÊÑõ\\r\\n54:40 ËÇ©„Çí!?\\r\\n57:10 üé∂if... / DA PUMP („Åì„Çç„É©„ÉÉ„Éóver. / Korone's Rap)\\r\\n-1:01:01 üé∂if... / DA PUMP („Åä„Åã„É©„ÉÉ„Éóver. / Okayu's Rap)\\r\\n-1:04:39 üé∂on more!\"},{\"comment_key\":\"UgxFPB8C69GToy0PIMN4AaABAg\",\"message\":\"URU-SETLIST / „ÅÜ„Çã„Çª„Éà„É™\\r\\n0:46 KORONE NOISES\\r\\n1:04 1. TOUCH / „Çø„ÉÉ„ÉÅ\\r\\n4:31 [MC1]\\r\\n6:19 2. Lemon\\r\\n10:36 [MC2]\\r\\n15:54 3. Racing into the Night (YORU NI KAKERU) / Â§ú„Å´ÈßÜ„Åë„Çã\\r\\n20:21 [MC3]\\r\\n23:37 4. SHIN TAKARAJIMA / Êñ∞ÂÆùÂ≥∂\\r\\n28:38 [MC4]\\r\\n33:10 5. ROKI / „É≠„Ç≠\\r\\n37:21 [MC5] & Hakujitsu / ÁôΩÊó•\\r\\n43:50 6. Genesis of Aquarion / ÂâµËÅñ„ÅÆ„Ç¢„ÇØ„Ç®„É™„Ç™„É≥\\r\\n48:32 [MC6]\\r\\n49:40 7. LION / „É©„Ç§„Ç™„É≥\\r\\n54:40 [MC7] & Curry-Meshi in Miracle / „Ç´„É¨„Éº„É°„Ç∑„Éª„Ç§„É≥„Éª„Éü„É©„ÇØ„É´\\r\\n57:10 8. if... OKAYU SINGING & KORONE RAP\\r\\n1:01:00 9. if... KORONE SINGING & OKAYU RAP\\r\\n1:04:39 10. if... OKAYU SINGING & KORONE RAP\\n\\nAMAIZING RAP DOGGO\"},{\"comment_key\":\"UgwgYxMhWlZ0NYC4v8Z4AaABAg\",\"message\":\"1:00  „Çø„ÉÉ„ÉÅ\\n\\n6:15  Lemon\\n\\n15:55  Â§ú„Å´ÈßÜ„Åë„Çã\\n\\n23:35  Êñ∞ÂÆùÂ≥∂\\n\\n33:08  „É≠„Ç≠\\n\\n42:40  ÁôΩÊó•(„Ç¢„Ç´„Éö„É©)\\n\\n43:50  ÂâµËÅñ„ÅÆ„Ç¢„ÇØ„Ç®„É™„Ç™„É≥\\n\\n49:40  „É©„Ç§„Ç™„É≥\\n\\n57:09  if‚Ä¶\\n\\n\\n\\n\\n\\nÈõë„Å†„Åë„Å©„Çø„Ç§„É†„Çπ„Ç±„Ç∏„É•„Éº„É´„Åß„Åô!!ÈñìÈÅï„Åà„Å¶„Åü„Å®„Åì„Çç„ÇÇÁõ¥„Åó„Åæ„Åó„Åü„Éº„Éº„Éº\"},{\"comment_key\":\"Ugxf6cDoACgwv65RoG94AaABAg\",\"message\":\"„Äê‰ø∫„Åü„Å°„Åå„ÅÜ„Çã„Åï„ÅÑ„ÅÆ„Åß‰Ωú„Çã„Çª„Éà„É™„Äë\\n1.1:05 „Çø„ÉÉ„ÉÅ/Â≤©Â¥éËâØÁæé\\n 4:14 Èü≥ÈáèÂ§ß‰∏àÂ§´„Å†„Å£„Åü?‚ÜíÁÑö„ÅçÁÅ´ASMR\\n 4:47 ‰ªäÊó•„ÅØ„Ç™„Éï„Ç≥„É©„Éú\\n2.6:19 Lemon/Á±≥Ê¥•ÁéÑÂ∏´\\n 10:49 „Åä„Åå„ÇÜ„ÅÆËÖï„ÅÆÊ∏©„ÇÇ„Çä„ÇíÊÑü„Åò„Å¶„ÅÑ„Çã\\n 11:38 ÊúÄÂæå„Å´„Ç™„Éï„Ç≥„É©„Éú„ÇÑ„Å£„Åü„ÅÆ„ÅÑ„Å§?\\n 12:30 ÊúÄËøë‰∏ÄÁ∑í„Å´„Ç¢„Éã„É°Ë¶≥„Çã„ÅÆ„Å´„Éè„Éû„Å£„Å¶„Çã\\n 14:27 „Åì„Çç„Åï„Çì„ÅÆËÄ≥„ÅåÂà∫„Åï„Å£„Å¶„Çã\\n3.15:54 Â§ú„Å´ÈßÜ„Åë„Çã/YOASOBI\\n 20:05 „Åä„Åå„ÇÜ„Åô„Åç!‚ÜíÈßÜ„ÅëÂá∫„ÅôÈü≥Èáè„ÉÅ„Çß„ÉÉ„ÇØ\\n 20:45 „Çª„Éà„É™„ÅØ?(Ëçí„Å∂„Çã&ÁõÆÈö†„Åó„Åä„Åã„ÇÜ)\\n 22:22 ÈÖç‰ø°ÁµÇ„Çè„Å£„Åü„Çâ„Åæ„Åü„Ç¢„Éã„É°Ë¶≥„Çã„ÇÇ„Çì„Å≠?\\n 23:29 „Çµ„Ç∂„Ç®„ÇÑ„ÇÅ„Çç!‚Üí„Çµ„Ç∂„Ç®\\\"„Åï„Çì\\\"„Å†„Çç!\\n4.23:38 Êñ∞ÂÆùÂ≥∂/„Çµ„Ç´„Éä„ÇØ„Ç∑„Éß„É≥\\n 28:47 Êâã„ÇíÁπã„Åê„Åä„Åã„Åì„Çç(ÊÖéÂ§™„Åã„ÇâÊôÇ„Åæ)\\n 29:21 „Åä„Åã„ÇÜ„Å®„Åì„Çç„Å≠„ÅÆË∫´Èï∑Â∑Æ\\n 30:46 Èö£„Å´„Åä„Åã„ÇÜ„ÅåÂ±Ö„Çã„Çì„Å†„Çà‚ÜíÂ±Ö„Åæ„Åõ„Çì\\n5.33:11 „É≠„Ç≠/„Åø„Åç„Å®P feat.Èè°Èü≥„É™„É≥\\n 37:45 „Åì„Çç„Åï„Çì„ÅÆËÄ≥„ÅåÂà∫„Åï„Çã„ÅÆ„Åß„Ç´„Éê„Éº‰ªò„Åë„Å¶\\n 38:54 ËÄ≥„ÅÆÂúßËø´ÊÑü„Åå„Éà„É©„Ç¶„Éû„Å™ÊàåÁ•û„Åì„Çç„Å≠\\n 39:53 „Åì„Çç„Å≠„Éû„Éû„ÅØ„Åä„Åã„ÇÜ„ÅÆ„Åì„Å®„ÅåÂ§ßÂ•Ω„Åç\\n 41:36 „ÅÜ„Çã„Çª„Éà„É™(„Åì„Çç„Åï„Çì„ÅÆÊÄ™„Åó„ÅÑË®òÊÜ∂Âäõ)\\n 42:25 „Å™„Å´ÁôΩÁõÆ„Å£„Å¶?(ÁôΩÊó•)‚ô™\\n6.43:51 ÂâµËÅñ„ÅÆ„Ç¢„ÇØ„Ç®„É™„Ç™„É≥/AKINO\\n 48:49 ÈÄ£Á∂ö„ÅßËÅ¥„ÅÑ„Å¶„Åè„Çå„Çã„Åã„Å™?‚Üí„Ç™„ÉÉ„Ç±„Éº!\\n7.49:43 „É©„Ç§„Ç™„É≥/May'n , ‰∏≠Â≥∂ÊÑõ\\n 54:40 „Åä„Åå„ÇÜ„ÅåËÇ©„ÇíÁµÑ„Çì„Åß„Åç„Åü!‚ÜíÁµÑ„Çì„ÅßÔæÖÔΩ≤Ôæñ\\n 55:06 ÊúÄÂæå„ÅÆÊõ≤„Å™„Çì„Å†„Å®ÊÄù„ÅÜ?\\n 55:23 Áä¨„ÅÆ„ÅäÂ∑°„Çä„Åï„Çì‚Üí„Çè„Çì„Çè„Çì„Çè„Çè~„Çì‚ô™\\n 55:28 „Ç´„É¨„Éº„Ç´„É¨„Éº‚Üí„Ç´„É¨„Éº„É°„Ç∑„Åßshow‚ô™\\n 55:46 „Ç≥„É°Ê¨Ñ„Å´„Ç∑„Ç™„É≥ÁôªÂ†¥\\n8.57:10 if.../DA PUMP(„Åì„Çç„É©„ÉÉ„Éó)\\n9.1:01:01 if.../DA PUMP(„Åä„Åã„É©„ÉÉ„Éó)\\n10.1:04:45 if.../DA PUMP(„Åä„Åã„Åì„Çç„É©„ÉÉ„Éó)\"},{\"comment_key\":\"Ugzm_3I_d-TsEkclr154AaABAg\",\"message\":\"1:04 „Çø„ÉÉ„ÉÅ / Â≤©Â¥éËâØÁæé\\n6:19 Lemon / Á±≥Ê¥•ÁéÑÂ∏´\\n15:53 Â§ú„Å´ÈßÜ„Åë„Çã / YOASOBI\\n23:36 Êñ∞ÂÆùÂ≥∂ / „Çµ„Ç´„Éä„ÇØ„Ç∑„Éß„É≥\\n33:09 „É≠„Ç≠ / „Åø„Åç„Å®P\\n42:39 ÁôΩÊó• / King Gnu\\n43:50 ÂâµËÅñ„ÅÆ„Ç¢„ÇØ„Ç®„É™„Ç™„É≥ / AKINO\\n49:42 „É©„Ç§„Ç™„É≥ / May'n ‰∏≠Â≥∂ÊÑõ\\n55:29 „Ç´„É¨„Éº„É°„Ç∑„Éª„Ç§„É≥„Éª„Éü„É©„ÇØ„É´ / „Çπ„Éë„Ç§„Çπ„É©„Éñ\\n57:10 if‚Ä¶ / DA PUMP („Åì„Çç„Åï„Çì„É©„ÉÉ„Éóver.)\\n‚î£1:01:00 „Åä„Åã„ÇÜ„É©„ÉÉ„Éóver.\\n‚îó1:04:36 „Åì„Çç„Åï„Çì„É©„ÉÉ„Éóver.\\n\\n„Åì„Çç„Åï„Çì„ÅÆ„É©„ÉÉ„ÉóÂ•Ω„Åç„Åô„Åé„Çã\"},{\"comment_key\":\"UgyVojylYdW8LEo_F6F4AaABAg\",\"message\":\"6:16 Super Duper LIT Lemon Cover\"},{\"comment_key\":\"Ugy1P9__oigsxJ5Ilg54AaABAg\",\"message\":\"0:46 KORONE NOISES\\r\\n1:04 1. TOUCH / „Çø„ÉÉ„ÉÅ\\r\\n4:31 [MC1]\\r\\n6:19 2. Lemon\\r\\n10:36 [MC2]\\r\\n15:54 3. Racing into the Night (YORU NI KAKERU) / Â§ú„Å´ÈßÜ„Åë„Çã\\r\\n20:21 [MC3]\\r\\n23:37 4. SHIN TAKARAJIMA / Êñ∞ÂÆùÂ≥∂\\r\\n28:38 [MC4]\\r\\n33:10 5. ROKI / „É≠„Ç≠\\r\\n37:21 [MC5] & Hakujitsu / ÁôΩÊó•\\r\\n43:50 6. Genesis of Aquarion / ÂâµËÅñ„ÅÆ„Ç¢„ÇØ„Ç®„É™„Ç™„É≥\\r\\n48:32 [MC6]\\r\\n49:40 7. LION / „É©„Ç§„Ç™„É≥\\r\\n54:40 [MC7] & Curry-Meshi in Miracle / „Ç´„É¨„Éº„É°„Ç∑„Éª„Ç§„É≥„Éª„Éü„É©„ÇØ„É´\\r\\n57:10 8. if... OKAYU SINGING & KORONE RAP\\r\\n1:01:00 9. if... KORONE SINGING & OKAYU RAP\\r\\n1:04:39 10. if... OKAYU SINGING & KORONE RAP\"}]}]}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "Comment": {
      "title": "Comment",
      "type": "object",
      "properties": {
        "comment_key": {
          "type": "string"
        },
        "video_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Channel": {
      "title": "Channel",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "english_name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "org": {
          "type": "string"
        },
        "suborg": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        },
        "banner": {
          "type": "string"
        },
        "twitter": {
          "type": "string"
        },
        "video_count": {
          "type": "string"
        },
        "subscriber_count": {
          "type": "string"
        },
        "view_count": {
          "type": "string"
        },
        "clip_count": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "published_at": {
          "type": "string",
          "format": "date-time"
        },
        "inactive": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Video": {
      "title": "Video",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "topic_id": {
          "description": "corresponds to a Topic ID, Videos of type `clip` cannot not have topic. Streams may or may not have topic.",
          "example": "minecraft",
          "type": "string"
        },
        "published_at": {
          "type": "string",
          "format": "date-time"
        },
        "available_at": {
          "description": "Takes on the first non-null value of end_actual, start_actual, start_scheduled, or published_at",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the video in seconds",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "start_scheduled": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "start_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "end_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "live_viewers": {
          "description": "Included when includes contains 'live_info'",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Included when includes contains 'description'",
          "type": "string"
        },
        "songcount": {
          "description": "Number of tagged songs for this video",
          "type": "number",
          "format": "double"
        },
        "channel_id": {
          "type": "string"
        }
      }
    },
    "ChannelMin": {
      "title": "ChannelMin",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "english_name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "photo": {
          "type": "string"
        }
      }
    },
    "VideoWithChannel": {
      "title": "VideoWithChannel",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "topic_id": {
          "description": "corresponds to a Topic ID, Videos of type `clip` cannot not have topic. Streams may or may not have topic.",
          "example": "minecraft",
          "type": "string"
        },
        "published_at": {
          "type": "string",
          "format": "date-time"
        },
        "available_at": {
          "description": "Takes on the first non-null value of end_actual, start_actual, start_scheduled, or published_at",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the video in seconds",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "start_scheduled": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "start_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "end_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "live_viewers": {
          "description": "Included when includes contains 'live_info'",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Included when includes contains 'description'",
          "type": "string"
        },
        "songcount": {
          "description": "Number of tagged songs for this video",
          "type": "number",
          "format": "double"
        },
        "channel_id": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/ChannelMin"
        }
      }
    },
    "VideoFull": {
      "title": "VideoFull",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "topic_id": {
          "description": "corresponds to a Topic ID, Videos of type `clip` cannot not have topic. Streams may or may not have topic.",
          "example": "minecraft",
          "type": "string"
        },
        "published_at": {
          "type": "string",
          "format": "date-time"
        },
        "available_at": {
          "description": "Takes on the first non-null value of end_actual, start_actual, start_scheduled, or published_at",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the video in seconds",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "start_scheduled": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "start_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "end_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "live_viewers": {
          "description": "Included when includes contains 'live_info'",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Included when includes contains 'description'",
          "type": "string"
        },
        "songcount": {
          "description": "Number of tagged songs for this video",
          "type": "number",
          "format": "double"
        },
        "channel_id": {
          "type": "string"
        },
        "clips": {
          "description": "Included when 'includes' contains 'clips'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        },
        "sources": {
          "description": "Included when 'includes' contains 'sources'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        },
        "refers": {
          "description": "Included when 'includes' contains 'refers'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        },
        "simulcasts": {
          "description": "Included when 'includes' contains 'simulcasts'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        },
        "mentions": {
          "description": "VTubers mentioned by this video, Included when 'includes' contains 'mentions'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mention"
          }
        },
        "songs": {
          "description": "Number of songs",
          "type": "number",
          "format": "double"
        }
      }
    },
    "c": {
      "title": "c",
      "example": 1,
      "type": "integer",
      "format": "int32",
      "enum": [
        "1",
        "0"
      ]
    },
    "ChannelsResponse": {
      "title": "ChannelsResponse",
      "type": "object",
      "properties": {
        "total": {
          "type": "number",
          "format": "double"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoFull"
          }
        }
      }
    },
    "Condition": {
      "title": "Condition",
      "type": "object",
      "properties": {
        "text": {
          "description": "Look for text in video title or description",
          "example": "Okakoro",
          "type": "string"
        }
      }
    },
    "include": {
      "title": "include",
      "type": "string",
      "enum": [
        "clips",
        "refers",
        "sources",
        "simulcasts",
        "mentions",
        "description",
        "live_info",
        "channel_stats",
        "songs"
      ]
    },
    "Item": {
      "title": "Item",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "topic_id": {
          "description": "corresponds to a Topic ID, Videos of type `clip` cannot not have topic. Streams may or may not have topic.",
          "example": "minecraft",
          "type": "string"
        },
        "published_at": {
          "type": "string",
          "format": "date-time"
        },
        "available_at": {
          "description": "Takes on the first non-null value of end_actual, start_actual, start_scheduled, or published_at",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the video in seconds",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "start_scheduled": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "start_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "end_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "live_viewers": {
          "description": "Included when includes contains 'live_info'",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Included when includes contains 'description'",
          "type": "string"
        },
        "songcount": {
          "description": "Number of tagged songs for this video",
          "type": "number",
          "format": "double"
        },
        "channel_id": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/ChannelMin"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      }
    },
    "LiveResponse": {
      "title": "LiveResponse",
      "type": "object",
      "properties": {
        "total": {
          "type": "number",
          "format": "double"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Video"
          }
        }
      }
    },
    "Mention": {
      "title": "Mention",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "english_name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "photo": {
          "type": "string"
        },
        "org": {
          "description": "Org of the Mentioned Channel",
          "type": "string"
        }
      }
    },
    "order": {
      "title": "order",
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "SearchCommentSearchRequest": {
      "title": "SearchCommentSearchRequest",
      "type": "object",
      "properties": {
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "lang": {
          "description": "If set, will filter clips to only show clips with these langs + all vtuber streams (provided `target` is not set to filter out streams)",
          "example": [
            "en",
            "ja"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "description": "Target types of videos",
          "example": [
            "clip",
            "stream"
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Target"
          }
        },
        "comment": {
          "description": "Find videos with comments containing specified string (case insensitive)",
          "example": "Lemon",
          "type": "string"
        },
        "topic": {
          "description": "Return videos that match one of the provided topics",
          "example": [
            "singing",
            "apex"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vch": {
          "description": "Videos with all of the specified channel \nids. If two or more channel IDs are specified, will only return their collabs, or if one channel is a clipper, it will only show clips of the other vtubers made by this clipper.",
          "example": [
            "UChAnqc_AY5_I3Px5dig3X1Q",
            "UCvaTdHTWBGv3MKj3KVqJVCw"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "org": {
          "description": "Videos of channels in any of the specified orgs, or clips that involve a channel in the specified org.",
          "example": [
            "Hololive",
            "Nijisanji"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paginated": {
          "description": "If set at all, responds with total and items wrapping the array of objects",
          "type": "boolean"
        },
        "offset": {
          "type": "number",
          "format": "double"
        },
        "limit": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "sort",
        "comment",
        "offset",
        "limit"
      ]
    },
    "SearchCommentSearchResponse": {
      "title": "SearchCommentSearchResponse",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "topic_id": {
          "description": "corresponds to a Topic ID, Videos of type `clip` cannot not have topic. Streams may or may not have topic.",
          "example": "minecraft",
          "type": "string"
        },
        "published_at": {
          "type": "string",
          "format": "date-time"
        },
        "available_at": {
          "description": "Takes on the first non-null value of end_actual, start_actual, start_scheduled, or published_at",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the video in seconds",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "start_scheduled": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "start_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "end_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "live_viewers": {
          "description": "Included when includes contains 'live_info'",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Included when includes contains 'description'",
          "type": "string"
        },
        "songcount": {
          "description": "Number of tagged songs for this video",
          "type": "number",
          "format": "double"
        },
        "channel_id": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/ChannelMin"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      }
    },
    "SearchCommentSearchResponse1": {
      "title": "SearchCommentSearchResponse1",
      "type": "object",
      "properties": {
        "total": {
          "type": "number",
          "format": "double"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      }
    },
    "SearchVideoSearchRequest": {
      "title": "SearchVideoSearchRequest",
      "type": "object",
      "properties": {
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "lang": {
          "description": "If set, will filter clips to only show clips with these langs + all vtuber streams (provided `target` is not set to filter out streams)",
          "example": [
            "en",
            "ja"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "description": "Target types of videos",
          "example": [
            "clip",
            "stream"
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Target"
          }
        },
        "conditions": {
          "description": "Match all the following conditions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "topic": {
          "description": "Return videos that match one of the provided topics",
          "example": [
            "singing",
            "apex"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vch": {
          "description": "Videos with all of the specified channel \nids. If two or more channel IDs are specified, will only return their collabs, or if one channel is a clipper, it will only show clips of the other vtubers made by this clipper.",
          "example": [
            "UChAnqc_AY5_I3Px5dig3X1Q",
            "UCvaTdHTWBGv3MKj3KVqJVCw"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "org": {
          "description": "Videos of channels in any of the specified orgs, or clips that involve a channel in the specified org.",
          "example": [
            "Hololive",
            "Nijisanji"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paginated": {
          "description": "If set at all, responds with total and items wrapping the array of objects",
          "type": "boolean"
        },
        "offset": {
          "type": "number",
          "format": "double"
        },
        "limit": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "sort",
        "offset",
        "limit"
      ]
    },
    "SearchVideoSearchResponse": {
      "title": "SearchVideoSearchResponse",
      "type": "object",
      "properties": {
        "total": {
          "type": "number",
          "format": "double"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        }
      }
    },
    "Sort": {
      "title": "Sort",
      "type": "string",
      "enum": [
        "oldest",
        "newest"
      ]
    },
    "Status": {
      "title": "Status",
      "type": "string",
      "enum": [
        "new",
        "upcoming",
        "live",
        "past",
        "missing"
      ]
    },
    "Target": {
      "title": "Target",
      "type": "string",
      "enum": [
        "clip",
        "stream"
      ]
    },
    "Type": {
      "title": "Type",
      "type": "string",
      "enum": [
        "vtuber",
        "subber"
      ]
    },
    "Type1": {
      "title": "Type1",
      "type": "string",
      "enum": [
        "stream",
        "clip"
      ]
    },
    "type4": {
      "title": "type4",
      "type": "string",
      "enum": [
        "clips",
        "videos",
        "collabs"
      ]
    },
    "VideosResponse": {
      "title": "VideosResponse",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "topic_id": {
          "description": "corresponds to a Topic ID, Videos of type `clip` cannot not have topic. Streams may or may not have topic.",
          "example": "minecraft",
          "type": "string"
        },
        "published_at": {
          "type": "string",
          "format": "date-time"
        },
        "available_at": {
          "description": "Takes on the first non-null value of end_actual, start_actual, start_scheduled, or published_at",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the video in seconds",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "start_scheduled": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "start_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "end_actual": {
          "description": "Included when includes contains 'live_info'",
          "type": "string",
          "format": "date-time"
        },
        "live_viewers": {
          "description": "Included when includes contains 'live_info'",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Included when includes contains 'description'",
          "type": "string"
        },
        "songcount": {
          "description": "Number of tagged songs for this video",
          "type": "number",
          "format": "double"
        },
        "channel_id": {
          "type": "string"
        },
        "clips": {
          "description": "Included when 'includes' contains 'clips'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        },
        "sources": {
          "description": "Included when 'includes' contains 'sources'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        },
        "refers": {
          "description": "Included when 'includes' contains 'refers'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        },
        "simulcasts": {
          "description": "Included when 'includes' contains 'simulcasts'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoWithChannel"
          }
        },
        "mentions": {
          "description": "VTubers mentioned by this video, Included when 'includes' contains 'mentions'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mention"
          }
        },
        "songs": {
          "description": "Number of songs",
          "type": "number",
          "format": "double"
        },
        "comments": {
          "description": "Comments are only returned if c === '1'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "recommendations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Video"
          }
        }
      }
    }
  },
  "tags": []
}