# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build & Test Dart

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: dart pub get

      # Verify the use of 'dart format' on each commit.
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      # Passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze --fatal-infos

      - name: Activate Coverage
        run: dart pub global activate coverage

      - name: Test With Coverage Results
        run: dart pub global run coverage:test_with_coverage --branch-coverage --function-coverage

      - name: Upload Coverage Results
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step

          curl -Os https://uploader.codecov.io/latest/linux/codecov

          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM

          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig

          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM

          shasum -a 256 -c codecov.SHA256SUM

          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}
